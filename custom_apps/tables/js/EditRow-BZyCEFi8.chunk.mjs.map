{"version":3,"mappings":";;g2BAiEA,MAAAA,EAAA,CACA,eACA,YACA,SAAAC,EACA,SAAAC,EACA,oBAAAC,EACA,WAAAC,CACA,EACA,QAAAC,EAAAC,CAAA,EACA,OACA,WACA,aACA,UACA,EACA,SACA,WACA,YACA,EACA,KACA,YACA,YACA,EACA,QACA,aACA,UACA,EACA,SACA,YACA,YACA,CACA,EACA,OACA,OACA,cACA,oBACA,gBACA,iBAAAC,CACA,CACA,EACA,UACA,mBACA,2DACA,EACA,iBACA,2BAAAC,KAAA,MACA,EACA,wBACA,+CACA,EACA,wBACA,gCAAAA,KAAA,2DAAAA,EAAA,KACA,CACA,EACA,OACA,MACA,WACA,kDACA,uEAEA,sEACA,0BACA,kBAEA,CACA,EACA,UACA,iBACA,EACA,SACA,GAAAC,EAAAC,EAAA,2BACA,GAAAD,EAAAE,EAAA,oBACA,EAAAC,EACA,aACA,aACA,MAAAC,EAAA,GACA,sBAAAC,GAAA,CACAD,EAAAC,EAAA,UAAAA,EAAA,KACA,GACA,+BAAAD,CAAA,CACA,CACA,EACA,eACA,qBACA,aACA,mBACA,EACA,sBACA,qBACA,yBACA,qBACA,mBACA,EACA,oBACA,uBAEA,MAAAE,EAAA,GACA,UAAAC,EAAAC,CAAA,kCACAF,EAAA,MACA,SAAAC,EACA,MAAAC,GAAA,EACA,GAGA,sBACA,eACA,mBACA,0BACA,KAAAF,CACA,IAEAG,EAAAN,EAAA,iCAEA,EACA,QACA,iBACA,mBACA,wBACA,EACA,kBACA,+BACA,EACA,oBAAAO,EAAA,CACA,uBAEA,qBACA,sBACA,MAAAA,EACA,mBACA,yBACA,IAEAD,EAAAN,EAAA,mCAEA,qBACA,mBACA,EACA,kBACA,2BAEA,cAAAQ,CAAA,QAAAC,EAAA,wBAAAD,CAAA,4DAAAA,EAAA,kDACA,iBAAAA,CACA,EACA,UAAAE,EAAA,CACAA,EAAA,eAAAA,EAAA,SACA,oBAEA,CACA,CACA","names":["_sfc_main","NcDialog","NcButton","ColumnFormComponent","NcNoteCard","permissionsMixin","rowHelper","ALLOWED_PROTOCOLS","col","mapActions","useDataStore","useTablesStore","t","tmp","item","data","key","value","showError","rowId","store","__vitePreload","event"],"ignoreList":[],"sources":["../src/modules/modals/EditRow.vue"],"sourcesContent":["<!--\n  - SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<NcDialog v-if=\"showModal\"\n\t\tdata-cy=\"editRowModal\"\n\t\t:name=\"t('tables', 'Edit row')\"\n\t\tsize=\"large\"\n\t\t@closing=\"actionCancel\">\n\t\t<div class=\"modal__content\" @keydown=\"onKeydown\">\n\t\t\t<div v-for=\"column in nonMetaColumns\" :key=\"column.id\">\n\t\t\t\t<ColumnFormComponent\n\t\t\t\t\t:column=\"column\"\n\t\t\t\t\t:value.sync=\"localRow[column.id]\" />\n\t\t\t\t<NcNoteCard v-if=\"column.mandatory && !isValueValidForColumn(localRow[column.id], column)\"\n\t\t\t\t\ttype=\"error\">\n\t\t\t\t\t{{ t('tables', '\"{columnTitle}\" should not be empty', { columnTitle: column.title }) }}\n\t\t\t\t</NcNoteCard>\n\t\t\t\t<NcNoteCard v-if=\"localRow[column.id] && column.type === 'text-link' && !isValidUrlProtocol(localRow[column.id])\"\n\t\t\t\t\ttype=\"error\">\n\t\t\t\t\t{{ t('tables', 'Invalid protocol. Allowed: {allowed}', {allowed: allowedProtocols.join(', ')}) }}\n\t\t\t\t</NcNoteCard>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"fix-col-4 space-T\" :class=\"{'justify-between': showDeleteButton, 'end': !showDeleteButton}\">\n\t\t\t\t\t<div v-if=\"showDeleteButton\">\n\t\t\t\t\t\t<NcButton v-if=\"!prepareDeleteRow\" :aria-label=\"t('tables', 'Delete')\" type=\"error\" data-cy=\"editRowDeleteButton\" @click=\"prepareDeleteRow = true\">\n\t\t\t\t\t\t\t{{ t('tables', 'Delete') }}\n\t\t\t\t\t\t</NcButton>\n\t\t\t\t\t\t<NcButton v-if=\"prepareDeleteRow\"\n\t\t\t\t\t\t\tdata-cy=\"editRowDeleteConfirmButton\"\n\t\t\t\t\t\t\t:wide=\"true\"\n\t\t\t\t\t\t\t:aria-label=\"t('tables', 'I really want to delete this row!')\"\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t@click=\"actionDeleteRow\">\n\t\t\t\t\t\t\t{{ t('tables', 'I really want to delete this row!') }}\n\t\t\t\t\t\t</NcButton>\n\t\t\t\t\t</div>\n\t\t\t\t\t<NcButton v-if=\"canUpdateData(element) && !localLoading\" :aria-label=\"t('tables', 'Save')\" type=\"primary\"\n\t\t\t\t\t\tdata-cy=\"editRowSaveButton\"\n\t\t\t\t\t\t:disabled=\"hasEmptyMandatoryRows || hasInvalidUrlProtocol\"\n\t\t\t\t\t\t@click=\"actionConfirm\">\n\t\t\t\t\t\t{{ t('tables', 'Save') }}\n\t\t\t\t\t</NcButton>\n\t\t\t\t\t<div v-if=\"localLoading\" class=\"icon-loading\" style=\"margin-left: 20px;\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</NcDialog>\n</template>\n\n<script>\nimport { NcDialog, NcButton, NcNoteCard } from '@nextcloud/vue'\nimport { showError } from '@nextcloud/dialogs'\nimport { translate as t } from '@nextcloud/l10n'\nimport '@nextcloud/dialogs/style.css'\nimport ColumnFormComponent from '../main/partials/ColumnFormComponent.vue'\nimport permissionsMixin from '../../shared/components/ncTable/mixins/permissionsMixin.js'\nimport rowHelper from '../../shared/components/ncTable/mixins/rowHelper.js'\nimport { mapActions } from 'pinia'\nimport { useTablesStore } from '../../store/store.js'\nimport { useDataStore } from '../../store/data.js'\nimport { ALLOWED_PROTOCOLS } from '../../shared/constants.ts'\n\nexport default {\n\tname: 'EditRow',\n\tcomponents: {\n\t\tNcDialog,\n\t\tNcButton,\n\t\tColumnFormComponent,\n\t\tNcNoteCard,\n\t},\n\tmixins: [permissionsMixin, rowHelper],\n\tprops: {\n\t\tshowModal: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tcolumns: {\n\t\t\ttype: Array,\n\t\t\tdefault: null,\n\t\t},\n\t\trow: {\n\t\t\ttype: Object,\n\t\t\tdefault: null,\n\t\t},\n\t\tisView: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\telement: {\n\t\t\ttype: Object,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tlocalRow: null,\n\t\t\tprepareDeleteRow: false,\n\t\t\tlocalLoading: false,\n\t\t\tallowedProtocols: ALLOWED_PROTOCOLS,\n\t\t}\n\t},\n\tcomputed: {\n\t\tshowDeleteButton() {\n\t\t\treturn this.canDeleteData(this.element) && !this.localLoading\n\t\t},\n\t\tnonMetaColumns() {\n\t\t\treturn this.columns.filter(col => col.id >= 0)\n\t\t},\n\t\thasEmptyMandatoryRows() {\n\t\t\treturn this.checkMandatoryFields(this.localRow)\n\t\t},\n\t\thasInvalidUrlProtocol() {\n\t\t\treturn this.nonMetaColumns.some(col => col.type === 'text-link' && !this.isValidUrlProtocol(this.localRow[col.id]))\n\t\t},\n\t},\n\twatch: {\n\t\trow() {\n\t\t\tif (this.row) {\n\t\t\t\tif (this.$router.currentRoute.path.includes('/row/')) {\n\t\t\t\t\tthis.$router.replace(this.$router.currentRoute.path.split('/row/')[0])\n\t\t\t\t}\n\t\t\t\tthis.$router.push(this.$router.currentRoute.path + '/row/' + this.row.id)\n\t\t\t\tthis.setActiveRowId(null)\n\t\t\t\tthis.loadValues()\n\t\t\t}\n\t\t},\n\t},\n\tmounted() {\n\t\tthis.loadValues()\n\t},\n\tmethods: {\n\t\t...mapActions(useDataStore, ['updateRow', 'removeRow']),\n\t\t...mapActions(useTablesStore, ['setActiveRowId']),\n\t\tt,\n\t\tloadValues() {\n\t\t\tif (this.row) {\n\t\t\t\tconst tmp = {}\n\t\t\t\tthis.row.data.forEach(item => {\n\t\t\t\t\ttmp[item.columnId] = item.value\n\t\t\t\t})\n\t\t\t\tthis.localRow = Object.assign({}, tmp)\n\t\t\t}\n\t\t},\n\t\tactionCancel() {\n\t\t\tthis.$router?.back()\n\t\t\tthis.reset()\n\t\t\tthis.$emit('close')\n\t\t},\n\t\tasync actionConfirm() {\n\t\t\tthis.localLoading = true\n\t\t\tawait this.sendRowToBE()\n\t\t\tthis.localLoading = false\n\t\t\tthis.actionCancel()\n\t\t},\n\t\tasync sendRowToBE() {\n\t\t\tawait this.loadStore()\n\n\t\t\tconst data = []\n\t\t\tfor (const [key, value] of Object.entries(this.localRow)) {\n\t\t\t\tdata.push({\n\t\t\t\t\tcolumnId: key,\n\t\t\t\t\tvalue: value ?? '',\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst res = await this.updateRow({\n\t\t\t\tid: this.row.id,\n\t\t\t\tisView: this.isView,\n\t\t\t\telementId: this.element.id,\n\t\t\t\tdata,\n\t\t\t})\n\t\t\tif (!res) {\n\t\t\t\tshowError(t('tables', 'Could not update row'))\n\t\t\t}\n\t\t},\n\t\treset() {\n\t\t\tthis.localRow = {}\n\t\t\tthis.dataLoaded = false\n\t\t\tthis.prepareDeleteRow = false\n\t\t},\n\t\tactionDeleteRow() {\n\t\t\tthis.deleteRowAtBE(this.row.id)\n\t\t},\n\t\tasync deleteRowAtBE(rowId) {\n\t\t\tawait this.loadStore()\n\n\t\t\tthis.localLoading = true\n\t\t\tconst res = await this.removeRow({\n\t\t\t\trowId,\n\t\t\t\tisView: this.isView,\n\t\t\t\telementId: this.element.id,\n\t\t\t})\n\t\t\tif (!res) {\n\t\t\t\tshowError(t('tables', 'Could not delete row.'))\n\t\t\t}\n\t\t\tthis.localLoading = false\n\t\t\tthis.actionCancel()\n\t\t},\n\t\tasync loadStore() {\n\t\t\tif (this.tablesStore) { return }\n\n\t\t\tconst { default: store } = await import('../../store/store.js')\n\t\t\tthis.tablesStore = store\n\t\t},\n\t\tonKeydown(event) {\n\t\t\tif (event.key === 'Enter' && event.ctrlKey) {\n\t\t\t\tthis.actionConfirm()\n\t\t\t}\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.modal-mask {\n\tz-index: 2001;\n}\n\n.modal__content {\n\tpadding: 20px;\n\n\t:where(.row .space-T, .row.space-T) {\n\t\tpadding-top: 20px;\n\t}\n\n\t:where([class*='fix-col-']) {\n\t\tdisplay: flex;\n\t}\n\n\t:where(.slot) {\n\t\talign-items: baseline;\n\t}\n\n\t:where(.end) {\n\t\tjustify-content: end;\n\t}\n\n\t:where(.slot.fix-col-2) {\n\t\tmin-width: 50%;\n\t}\n\n\t:where(.fix-col-1.end) {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t}\n\n\t:where(.fix-col-3) {\n\t\tdisplay: inline-block;\n\t}\n\n\t:where(.slot.fix-col-4 input, .slot.fix-col-4 .row) {\n\t\tmin-width: 100% !important;\n\t}\n\n\t:where(.name-parts) {\n\t\tdisplay: block !important;\n\t\tmax-width: fit-content !important;\n\t}\n}\n</style>\n"],"file":"js/EditRow-BZyCEFi8.chunk.mjs"}