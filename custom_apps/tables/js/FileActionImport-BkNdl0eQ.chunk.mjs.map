{"version":3,"file":"FileActionImport-BkNdl0eQ.chunk.mjs","sources":["../src/modules/modals/FileActionImport.vue"],"sourcesContent":["<!--\n  - SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<NcDialog v-if=\"!importResults\"\n\t\t:name=\"t('tables', 'Import file into Tables')\"\n\t\tsize=\"normal\"\n\t\t@closing=\"closeImportDialog\">\n\t\t<div class=\"modal__content\">\n\t\t\t<RowFormWrapper\n\t\t\t\tclass=\"row\"\n\t\t\t\t:title=\"t('tables', 'Import as new table')\"\n\t\t\t\t:description=\"t('tables', 'This will create a new table from the data in this file.')\">\n\t\t\t\t<div style=\"display: flex; flex-flow: row wrap; align-items: center;\">\n\t\t\t\t\t<NcCheckboxRadioSwitch\n\t\t\t\t\t\tdata-cy=\"importAsNewTableSwitch\"\n\t\t\t\t\t\t:aria-label=\"t('tables', 'Import as new table')\"\n\t\t\t\t\t\t:checked.sync=\"importAsNew\"\n\t\t\t\t\t\ttype=\"switch\"\n\t\t\t\t\t\tclass=\"switch\"\n\t\t\t\t\t\tstyle=\"flex-grow: 0;\">\n\t\t\t\t\t\t{{ t('tables', 'Import as new table') }}\n\t\t\t\t\t</NcCheckboxRadioSwitch>\n\n\t\t\t\t\t<div style=\"display: flex; flex-flow: row nowrap; flex-grow: 1;\">\n\t\t\t\t\t\t<NcEmojiPicker :close-on-select=\"true\" @select=\"selectIcon\">\n\t\t\t\t\t\t\t<NcButton\n\t\t\t\t\t\t\t\t:aria-label=\"t('tables', 'Select emoji for table')\"\n\t\t\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t\t\t:disabled=\"!importAsNew\"\n\t\t\t\t\t\t\t\t@click.prevent>\n\t\t\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t\t\t{{ newTable.emoji }}\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</NcButton>\n\t\t\t\t\t\t</NcEmojiPicker>\n\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t:aria-label=\"t('tables', 'Title of the new table')\"\n\t\t\t\t\t\t\tstyle=\"flex-grow: 1;\"\n\t\t\t\t\t\t\t:placeholder=\"newTable.title\"\n\t\t\t\t\t\t\t:disabled=\"!importAsNew\"\n\t\t\t\t\t\t\t@input=\"setNewTableTitle\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</RowFormWrapper>\n\n\t\t\t<RowFormWrapper\n\t\t\t\tclass=\"row\"\n\t\t\t\t:title=\"t('tables', 'Import into existing table')\"\n\t\t\t\t:description=\"t('tables', 'This will import the data from this file into an already existing table.')\">\n\t\t\t\t<div style=\"display: flex; flex-flow: row nowrap; margin: 20px 0;\">\n\t\t\t\t\t<NcSelect\n\t\t\t\t\t\tv-model=\"selectedTable\"\n\t\t\t\t\t\tdata-cy=\"selectExistingTableDropdown\"\n\t\t\t\t\t\t:options=\"tableOptions\"\n\t\t\t\t\t\t:aria-label-combobox=\"t('tables', 'Select the table to import into')\"\n\t\t\t\t\t\t:placeholder=\"t('tables', 'Select an existing table')\"\n\t\t\t\t\t\t:disabled=\"importAsNew\"\n\t\t\t\t\t\t:loading=\"loadingTables\"\n\t\t\t\t\t\tstyle=\"flex-grow: 1;\" />\n\t\t\t\t</div>\n\t\t\t</RowFormWrapper>\n\n\t\t\t<NcCheckboxRadioSwitch\n\t\t\t\t:aria-label=\"t('tables', 'Create missing columns')\"\n\t\t\t\ttype=\"switch\"\n\t\t\t\t:disabled=\"importAsNew\"\n\t\t\t\t:checked.sync=\"createMissingColumns\"\n\t\t\t\tstyle=\"flex-grow: 0;\">\n\t\t\t\t{{ t('tables', 'Create missing columns') }}\n\t\t\t</NcCheckboxRadioSwitch>\n\n\t\t\t<div class=\"end\">\n\t\t\t\t<NcButton\n\t\t\t\t\tdata-cy=\"fileActionImportButton\"\n\t\t\t\t\t:aria-label=\"t('tables', 'Import')\"\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t:disabled=\"importingFile\"\n\t\t\t\t\t@click=\"importFile\">\n\t\t\t\t\t<template v-if=\"importingFile\" #icon>\n\t\t\t\t\t\t<NcLoadingIcon :size=\"20\" />\n\t\t\t\t\t</template>\n\n\t\t\t\t\t{{ t('tables', 'Import') }}\n\t\t\t\t</NcButton>\n\t\t\t</div>\n\t\t</div>\n\t</NcDialog>\n\n\t<NcDialog v-else\n\t\t:name=\"t('tables', 'Import successful')\"\n\t\t:open.sync=\"showResultsDialog\"\n\t\tsize=\"small\">\n\t\t<template #actions>\n\t\t\t<NcButton :aria-label=\"t('tables', 'Close')\" @click=\"closeResultsDialog()\">\n\t\t\t\t{{ t('tables', 'Close') }}\n\t\t\t</NcButton>\n\t\t</template>\n\n\t\t<ImportResults :results=\"importResults\" />\n\t</NcDialog>\n</template>\n\n<script>\nimport {\n\tNcDialog,\n\tNcButton,\n\tNcSelect,\n\tNcCheckboxRadioSwitch,\n\tNcEmojiPicker,\n\tNcLoadingIcon,\n} from '@nextcloud/vue'\n\nimport { generateUrl } from '@nextcloud/router'\nimport { Node } from '@nextcloud/files'\nimport { showError } from '@nextcloud/dialogs'\nimport axios from '@nextcloud/axios'\nimport { translate as t } from '@nextcloud/l10n'\nimport RowFormWrapper from '../../shared/components/ncTable/partials/rowTypePartials/RowFormWrapper.vue'\nimport ImportResults from './ImportResults.vue'\n\nexport default {\n\tname: 'FileActionImport',\n\n\tcomponents: {\n\t\tNcButton,\n\t\tNcDialog,\n\t\tImportResults,\n\t\tNcLoadingIcon,\n\t\tNcSelect,\n\t\tNcCheckboxRadioSwitch,\n\t\tNcEmojiPicker,\n\t\tRowFormWrapper,\n\t},\n\n\tprops: {\n\t\tfile: {\n\t\t\ttype: Node,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\timportAsNew: true,\n\t\t\tcreateMissingColumns: true,\n\n\t\t\tloadingTables: false,\n\t\t\timportingFile: false,\n\n\t\t\tnewTable: {\n\t\t\t\temoji: 'ðŸ”§',\n\t\t\t\ttitle: this.file.basename,\n\t\t\t},\n\t\t\texistingTables: [],\n\t\t\tselectedTable: null,\n\n\t\t\timportResults: null,\n\t\t\tshowResultsDialog: true,\n\t\t}\n\t},\n\n\tcomputed: {\n\t\ttableOptions() {\n\t\t\tconst options = this.existingTables.map(table => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: `${table.emoji} ${table.title}`,\n\t\t\t\t\tvalue: table.id,\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn options ?? 'No existing tables'\n\t\t},\n\t},\n\n\tasync mounted() {\n\t\tthis.loadingTables = true\n\n\t\tconst res = await axios.get(generateUrl('/apps/tables/table'))\n\n\t\tif (res.data) {\n\t\t\tres.data.forEach(table => this.existingTables.push({\n\t\t\t\ttitle: table.title,\n\t\t\t\temoji: table.emoji,\n\t\t\t\tid: table.id,\n\t\t\t}))\n\t\t}\n\n\t\tthis.loadingTables = false\n\t},\n\n\tmethods: {\n\t\tt,\n\t\tselectIcon(icon) {\n\t\t\tthis.newTable.emoji = icon\n\t\t},\n\t\tsetNewTableTitle(title) {\n\t\t\tthis.newTable.title = title.srcElement.value\n\t\t},\n\t\tcloseResultsDialog() {\n\t\t\tthis.showResultsDialog = false\n\t\t},\n\t\tasync importFile() {\n\t\t\tthis.importingFile = true\n\n\t\t\tif (this.importAsNew) {\n\t\t\t\tthis.importResults = await importToNewTable(this.newTable.title, this.newTable.emoji, this.file)\n\n\t\t\t\tif (!this.importResults) {\n\t\t\t\t\tshowError(t('tables', 'Could not create table'))\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!this.selectedTable) {\n\t\t\t\t\tshowError(t('tables', 'You must select an existing table'))\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tthis.importResults = await importToExistingTable(this.selectedTable.value, this.file, this.createMissingColumns)\n\n\t\t\t\tif (!this.importResults) {\n\t\t\t\t\tshowError(t('tables', 'Could not import data to table'))\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.importingFile = false\n\t\t},\n\t\tcloseImportDialog() {\n\t\t\tthis.$emit('close')\n\t\t},\n\t},\n}\n\nasync function importToNewTable(title, emoji, file) {\n\tconst newTable = await insertTable(title, emoji)\n\n\tif (!newTable) {\n\t\treturn false\n\t}\n\n\treturn await updateTable(newTable.id, file.path, true)\n}\n\nasync function importToExistingTable(tableId, file, createMissingColumns) {\n\treturn await updateTable(tableId, file.path, createMissingColumns)\n}\n\nasync function insertTable(title, emoji) {\n\tconst res = await axios.post(generateUrl('/apps/tables/table'), {\n\t\ttitle,\n\t\temoji,\n\t\ttemplate: 'custom',\n\t})\n\n\treturn res.data\n}\n\nasync function updateTable(tableId, path, createMissingColumns) {\n\tconst res = await axios.post(generateUrl(`/apps/tables/import/table/${tableId}`), {\n\t\tpath,\n\t\tcreateMissingColumns,\n\t})\n\n\treturn res.data\n}\n</script>\n\n<style scoped lang=\"scss\">\n.modal__content {\n\tmargin: 20px;\n}\n\n.row {\n\tmargin: 20px 0;\n}\n\n.switch {\n\tmargin: 5px;\n}\n\n.end {\n\tdisplay: flex;\n\tflex-flow: row nowrap;\n\tjustify-content: flex-end;\n}\n</style>\n"],"names":["_sfc_main","NcButton","NcDialog","ImportResults","NcLoadingIcon","NcSelect","NcCheckboxRadioSwitch","NcEmojiPicker","RowFormWrapper","Node","table","res","axios","generateUrl","t","icon","title","importToNewTable","showError","importToExistingTable","emoji","file","newTable","insertTable","updateTable","tableId","createMissingColumns","path"],"mappings":";8mBA2HA,MAAAA,EAAA,CACA,KAAA,mBAEA,WAAA,CACA,SAAAC,EACA,SAAAC,EACA,cAAAC,EACA,cAAAC,EACA,SAAAC,EACA,sBAAAC,EACA,cAAAC,EACA,eAAAC,CACA,EAEA,MAAA,CACA,KAAA,CACA,KAAAC,EACA,QAAA,IACA,CACA,EAEA,MAAA,CACA,MAAA,CACA,YAAA,GACA,qBAAA,GAEA,cAAA,GACA,cAAA,GAEA,SAAA,CACA,MAAA,KACA,MAAA,KAAA,KAAA,QACA,EACA,eAAA,CAAA,EACA,cAAA,KAEA,cAAA,KACA,kBAAA,EACA,CACA,EAEA,SAAA,CACA,cAAA,CAQA,OAPA,KAAA,eAAA,IAAAC,IACA,CACA,MAAA,GAAAA,EAAA,KAAA,IAAAA,EAAA,KAAA,GACA,MAAAA,EAAA,EACA,EACA,GAEA,oBACA,CACA,EAEA,MAAA,SAAA,CACA,KAAA,cAAA,GAEA,MAAAC,EAAA,MAAAC,EAAA,IAAAC,EAAA,oBAAA,CAAA,EAEAF,EAAA,MACAA,EAAA,KAAA,QAAAD,GAAA,KAAA,eAAA,KAAA,CACA,MAAAA,EAAA,MACA,MAAAA,EAAA,MACA,GAAAA,EAAA,EACA,CAAA,CAAA,EAGA,KAAA,cAAA,EACA,EAEA,QAAA,CACA,EAAAI,EACA,WAAAC,EAAA,CACA,KAAA,SAAA,MAAAA,CACA,EACA,iBAAAC,EAAA,CACA,KAAA,SAAA,MAAAA,EAAA,WAAA,KACA,EACA,oBAAA,CACA,KAAA,kBAAA,EACA,EACA,MAAA,YAAA,CAGA,GAFA,KAAA,cAAA,GAEA,KAAA,YACA,KAAA,cAAA,MAAAC,EAAA,KAAA,SAAA,MAAA,KAAA,SAAA,MAAA,KAAA,IAAA,EAEA,KAAA,eACAC,EAAAJ,EAAA,SAAA,wBAAA,CAAA,MAEA,CACA,GAAA,CAAA,KAAA,cAAA,CACAI,EAAAJ,EAAA,SAAA,mCAAA,CAAA,EACA,MACA,CAEA,KAAA,cAAA,MAAAK,EAAA,KAAA,cAAA,MAAA,KAAA,KAAA,KAAA,oBAAA,EAEA,KAAA,eACAD,EAAAJ,EAAA,SAAA,gCAAA,CAAA,CAEA,CAEA,KAAA,cAAA,EACA,EACA,mBAAA,CACA,KAAA,MAAA,OAAA,CACA,CACA,CACA,EAEA,eAAAG,EAAAD,EAAAI,EAAAC,EAAA,CACA,MAAAC,EAAA,MAAAC,EAAAP,EAAAI,CAAA,EAEA,OAAAE,EAIA,MAAAE,EAAAF,EAAA,GAAAD,EAAA,KAAA,EAAA,EAHA,EAIA,CAEA,eAAAF,EAAAM,EAAAJ,EAAAK,EAAA,CACA,OAAA,MAAAF,EAAAC,EAAAJ,EAAA,KAAAK,CAAA,CACA,CAEA,eAAAH,EAAAP,EAAAI,EAAA,CAOA,OANA,MAAAR,EAAA,KAAAC,EAAA,oBAAA,EAAA,CACA,MAAAG,EACA,MAAAI,EACA,SAAA,QACA,CAAA,GAEA,IACA,CAEA,eAAAI,EAAAC,EAAAE,EAAAD,EAAA,CAMA,OALA,MAAAd,EAAA,KAAAC,EAAA,6BAAAY,CAAA,EAAA,EAAA,CACA,KAAAE,EACA,qBAAAD,CACA,CAAA,GAEA,IACA"}